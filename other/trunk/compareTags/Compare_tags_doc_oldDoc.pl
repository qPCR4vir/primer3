#!/usr/bin/perl -w


use strict;

# Copy here the content of an old tags_list.txt
my @oldDocTags = ("SEQUENCE_ID",
"SEQUENCE_TEMPLATE",
"SEQUENCE_INCLUDED_REGION",
"SEQUENCE_TARGET",
"SEQUENCE_EXCLUDED_REGION",
"SEQUENCE_PRIMER_OVERLAP_POS",
"SEQUENCE_INTERNAL_EXCLUDED_REGION",
"SEQUENCE_PRIMER",
"SEQUENCE_INTERNAL_OLIGO",
"SEQUENCE_PRIMER_REVCOMP",
"SEQUENCE_START_CODON_POSITION",
"SEQUENCE_QUALITY",
"SEQUENCE_FORCE_LEFT_START",
"SEQUENCE_FORCE_LEFT_END",
"SEQUENCE_FORCE_RIGHT_START",
"SEQUENCE_FORCE_RIGHT_END",
"PRIMER_TASK",
"PRIMER_PICK_LEFT_PRIMER",
"PRIMER_PICK_INTERNAL_OLIGO",
"PRIMER_PICK_RIGHT_PRIMER",
"PRIMER_NUM_RETURN",
"PRIMER_POS_OVERLAP_TO_END_DIST",
"PRIMER_PRODUCT_SIZE_RANGE",
"PRIMER_PRODUCT_OPT_SIZE",
"PRIMER_PAIR_WT_PRODUCT_SIZE_LT",
"PRIMER_PAIR_WT_PRODUCT_SIZE_GT",
"PRIMER_MIN_SIZE",
"PRIMER_INTERNAL_MIN_SIZE",
"PRIMER_OPT_SIZE",
"PRIMER_INTERNAL_OPT_SIZE",
"PRIMER_MAX_SIZE",
"PRIMER_INTERNAL_MAX_SIZE",
"PRIMER_WT_SIZE_LT",
"PRIMER_INTERNAL_WT_SIZE_LT",
"PRIMER_WT_SIZE_GT",
"PRIMER_INTERNAL_WT_SIZE_GT",
"PRIMER_MIN_GC",
"PRIMER_INTERNAL_MIN_GC",
"PRIMER_OPT_GC_PERCENT",
"PRIMER_INTERNAL_OPT_GC_PERCENT",
"PRIMER_MAX_GC",
"PRIMER_INTERNAL_MAX_GC",
"PRIMER_WT_GC_PERCENT_LT",
"PRIMER_INTERNAL_WT_GC_PERCENT_LT",
"PRIMER_WT_GC_PERCENT_GT",
"PRIMER_INTERNAL_WT_GC_PERCENT_GT",
"PRIMER_GC_CLAMP",
"PRIMER_MAX_END_GC",
"PRIMER_MIN_TM",
"PRIMER_INTERNAL_MIN_TM",
"PRIMER_OPT_TM",
"PRIMER_INTERNAL_OPT_TM",
"PRIMER_MAX_TM",
"PRIMER_INTERNAL_MAX_TM",
"PRIMER_PAIR_MAX_DIFF_TM",
"PRIMER_WT_TM_LT",
"PRIMER_INTERNAL_WT_TM_LT",
"PRIMER_WT_TM_GT",
"PRIMER_INTERNAL_WT_TM_GT",
"PRIMER_PAIR_WT_DIFF_TM",
"PRIMER_PRODUCT_MIN_TM",
"PRIMER_PRODUCT_OPT_TM",
"PRIMER_PRODUCT_MAX_TM",
"PRIMER_PAIR_WT_PRODUCT_TM_LT",
"PRIMER_PAIR_WT_PRODUCT_TM_GT",
"PRIMER_TM_FORMULA",
"PRIMER_SALT_MONOVALENT",
"PRIMER_INTERNAL_SALT_MONOVALENT",
"PRIMER_SALT_DIVALENT",
"PRIMER_INTERNAL_SALT_DIVALENT",
"PRIMER_DNTP_CONC",
"PRIMER_INTERNAL_DNTP_CONC",
"PRIMER_SALT_CORRECTIONS",
"PRIMER_DNA_CONC",
"PRIMER_INTERNAL_DNA_CONC",
"PRIMER_MAX_SELF_ANY",
"PRIMER_INTERNAL_MAX_SELF_ANY",
"PRIMER_PAIR_MAX_COMPL_ANY",
"PRIMER_WT_SELF_ANY",
"PRIMER_INTERNAL_WT_SELF_ANY",
"PRIMER_PAIR_WT_COMPL_ANY",
"PRIMER_MAX_SELF_END",
"PRIMER_INTERNAL_MAX_SELF_END",
"PRIMER_PAIR_MAX_COMPL_END",
"PRIMER_WT_SELF_END",
"PRIMER_INTERNAL_WT_SELF_END",
"PRIMER_PAIR_WT_COMPL_END",
"PRIMER_MAX_END_STABILITY",
"PRIMER_WT_END_STABILITY",
"PRIMER_MAX_NS_ACCEPTED",
"PRIMER_INTERNAL_MAX_NS_ACCEPTED",
"PRIMER_WT_NUM_NS",
"PRIMER_INTERNAL_WT_NUM_NS",
"PRIMER_MAX_POLY_X",
"PRIMER_INTERNAL_MAX_POLY_X",
"PRIMER_MIN_THREE_PRIME_DISTANCE",
"PRIMER_PICK_ANYWAY",
"PRIMER_LOWERCASE_MASKING",
"PRIMER_EXPLAIN_FLAG",
"PRIMER_LIBERAL_BASE",
"PRIMER_FIRST_BASE_INDEX",
"PRIMER_MAX_TEMPLATE_MISPRIMING",
"PRIMER_INTERNAL_MAX_TEMPLATE_MISHYB",
"PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING",
"PRIMER_WT_TEMPLATE_MISPRIMING",
"PRIMER_INTERNAL_WT_TEMPLATE_MISHYB",
"PRIMER_PAIR_WT_TEMPLATE_MISPRIMING",
"PRIMER_MISPRIMING_LIBRARY",
"PRIMER_INTERNAL_MISHYB_LIBRARY",
"PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS",
"PRIMER_MAX_LIBRARY_MISPRIMING",
"PRIMER_INTERNAL_MAX_LIBRARY_MISHYB",
"PRIMER_PAIR_MAX_LIBRARY_MISPRIMING",
"PRIMER_WT_LIBRARY_MISPRIMING",
"PRIMER_INTERNAL_WT_LIBRARY_MISHYB",
"PRIMER_PAIR_WT_LIBRARY_MISPRIMING",
"PRIMER_MIN_QUALITY",
"PRIMER_INTERNAL_MIN_QUALITY",
"PRIMER_MIN_END_QUALITY",
"PRIMER_QUALITY_RANGE_MIN",
"PRIMER_QUALITY_RANGE_MAX",
"PRIMER_WT_SEQ_QUAL",
"PRIMER_INTERNAL_WT_SEQ_QUAL",
"PRIMER_PAIR_WT_PR_PENALTY",
"PRIMER_PAIR_WT_IO_PENALTY",
"PRIMER_INSIDE_PENALTY",
"PRIMER_OUTSIDE_PENALTY",
"PRIMER_WT_POS_PENALTY",
"PRIMER_SEQUENCING_LEAD",
"PRIMER_SEQUENCING_SPACING",
"PRIMER_SEQUENCING_INTERVAL",
"PRIMER_SEQUENCING_ACCURACY",
"PRIMER_WT_END_QUAL",
"PRIMER_INTERNAL_WT_END_QUAL",
"P3_FILE_ID",
"P3_FILE_FLAG",
"P3_COMMENT",
);



# Copy here the content of tags_list.txt
my @docTags = ("SEQUENCE_ID",
"SEQUENCE_TEMPLATE",
"SEQUENCE_INCLUDED_REGION",
"SEQUENCE_TARGET",
"SEQUENCE_EXCLUDED_REGION",
"SEQUENCE_PRIMER_PAIR_OK_REGION_LIST",
"SEQUENCE_OVERLAP_JUNCTION_LIST",
"SEQUENCE_INTERNAL_EXCLUDED_REGION",
"SEQUENCE_PRIMER",
"SEQUENCE_INTERNAL_OLIGO",
"SEQUENCE_PRIMER_REVCOMP",
"SEQUENCE_START_CODON_POSITION",
"SEQUENCE_QUALITY",
"SEQUENCE_FORCE_LEFT_START",
"SEQUENCE_FORCE_LEFT_END",
"SEQUENCE_FORCE_RIGHT_START",
"SEQUENCE_FORCE_RIGHT_END",
"PRIMER_TASK",
"PRIMER_PICK_LEFT_PRIMER",
"PRIMER_PICK_INTERNAL_OLIGO",
"PRIMER_PICK_RIGHT_PRIMER",
"PRIMER_NUM_RETURN",
"PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION",
"PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION",
"PRIMER_PRODUCT_SIZE_RANGE",
"PRIMER_PRODUCT_OPT_SIZE",
"PRIMER_PAIR_WT_PRODUCT_SIZE_LT",
"PRIMER_PAIR_WT_PRODUCT_SIZE_GT",
"PRIMER_MIN_SIZE",
"PRIMER_INTERNAL_MIN_SIZE",
"PRIMER_OPT_SIZE",
"PRIMER_INTERNAL_OPT_SIZE",
"PRIMER_MAX_SIZE",
"PRIMER_INTERNAL_MAX_SIZE",
"PRIMER_WT_SIZE_LT",
"PRIMER_INTERNAL_WT_SIZE_LT",
"PRIMER_WT_SIZE_GT",
"PRIMER_INTERNAL_WT_SIZE_GT",
"PRIMER_MIN_GC",
"PRIMER_INTERNAL_MIN_GC",
"PRIMER_OPT_GC_PERCENT",
"PRIMER_INTERNAL_OPT_GC_PERCENT",
"PRIMER_MAX_GC",
"PRIMER_INTERNAL_MAX_GC",
"PRIMER_WT_GC_PERCENT_LT",
"PRIMER_INTERNAL_WT_GC_PERCENT_LT",
"PRIMER_WT_GC_PERCENT_GT",
"PRIMER_INTERNAL_WT_GC_PERCENT_GT",
"PRIMER_GC_CLAMP",
"PRIMER_MAX_END_GC",
"PRIMER_MIN_TM",
"PRIMER_INTERNAL_MIN_TM",
"PRIMER_OPT_TM",
"PRIMER_INTERNAL_OPT_TM",
"PRIMER_MAX_TM",
"PRIMER_INTERNAL_MAX_TM",
"PRIMER_PAIR_MAX_DIFF_TM",
"PRIMER_WT_TM_LT",
"PRIMER_INTERNAL_WT_TM_LT",
"PRIMER_WT_TM_GT",
"PRIMER_INTERNAL_WT_TM_GT",
"PRIMER_PAIR_WT_DIFF_TM",
"PRIMER_PRODUCT_MIN_TM",
"PRIMER_PRODUCT_OPT_TM",
"PRIMER_PRODUCT_MAX_TM",
"PRIMER_PAIR_WT_PRODUCT_TM_LT",
"PRIMER_PAIR_WT_PRODUCT_TM_GT",
"PRIMER_TM_FORMULA",
"PRIMER_SALT_MONOVALENT",
"PRIMER_INTERNAL_SALT_MONOVALENT",
"PRIMER_SALT_DIVALENT",
"PRIMER_INTERNAL_SALT_DIVALENT",
"PRIMER_DNTP_CONC",
"PRIMER_INTERNAL_DNTP_CONC",
"PRIMER_SALT_CORRECTIONS",
"PRIMER_DNA_CONC",
"PRIMER_INTERNAL_DNA_CONC",
"PRIMER_THERMODYNAMIC_ALIGNMENT",
"PRIMER_THERMODYNAMIC_PARAMETERS_PATH",
"PRIMER_MAX_SELF_ANY",
"PRIMER_MAX_SELF_ANY_TH",
"PRIMER_INTERNAL_MAX_SELF_ANY",
"PRIMER_INTERNAL_MAX_SELF_ANY_TH",
"PRIMER_PAIR_MAX_COMPL_ANY",
"PRIMER_PAIR_MAX_COMPL_ANY_TH",
"PRIMER_WT_SELF_ANY",
"PRIMER_WT_SELF_ANY_TH",
"PRIMER_INTERNAL_WT_SELF_ANY",
"PRIMER_INTERNAL_WT_SELF_ANY_TH",
"PRIMER_PAIR_WT_COMPL_ANY",
"PRIMER_PAIR_WT_COMPL_ANY_TH",
"PRIMER_MAX_SELF_END",
"PRIMER_MAX_SELF_END_TH",
"PRIMER_INTERNAL_MAX_SELF_END",
"PRIMER_INTERNAL_MAX_SELF_END_TH",
"PRIMER_PAIR_MAX_COMPL_END",
"PRIMER_PAIR_MAX_COMPL_END_TH",
"PRIMER_WT_SELF_END",
"PRIMER_WT_SELF_END_TH",
"PRIMER_INTERNAL_WT_SELF_END",
"PRIMER_INTERNAL_WT_SELF_END_TH",
"PRIMER_PAIR_WT_COMPL_END",
"PRIMER_PAIR_WT_COMPL_END_TH",
"PRIMER_MAX_HAIRPIN_TH",
"PRIMER_PAIR_MAX_HAIRPIN_TH",
"PRIMER_INTERNAL_MAX_HAIRPIN_TH",
"PRIMER_WT_HAIRPIN_TH",
"PRIMER_INTERNAL_WT_HAIRPIN_TH",
"PRIMER_MAX_END_STABILITY",
"PRIMER_WT_END_STABILITY",
"PRIMER_MAX_NS_ACCEPTED",
"PRIMER_INTERNAL_MAX_NS_ACCEPTED",
"PRIMER_WT_NUM_NS",
"PRIMER_INTERNAL_WT_NUM_NS",
"PRIMER_MAX_POLY_X",
"PRIMER_INTERNAL_MAX_POLY_X",
"PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE",
"PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE",
"PRIMER_MIN_THREE_PRIME_DISTANCE",
"PRIMER_PICK_ANYWAY",
"PRIMER_LOWERCASE_MASKING",
"PRIMER_EXPLAIN_FLAG",
"PRIMER_LIBERAL_BASE",
"PRIMER_FIRST_BASE_INDEX",
"PRIMER_MAX_TEMPLATE_MISPRIMING",
"PRIMER_MAX_TEMPLATE_MISPRIMING_TH",
"PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING",
"PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING_TH",
"PRIMER_WT_TEMPLATE_MISPRIMING",
"PRIMER_WT_TEMPLATE_MISPRIMING_TH",
"PRIMER_PAIR_WT_TEMPLATE_MISPRIMING",
"PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH",
"PRIMER_MISPRIMING_LIBRARY",
"PRIMER_INTERNAL_MISHYB_LIBRARY",
"PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS",
"PRIMER_MAX_LIBRARY_MISPRIMING",
"PRIMER_INTERNAL_MAX_LIBRARY_MISHYB",
"PRIMER_PAIR_MAX_LIBRARY_MISPRIMING",
"PRIMER_WT_LIBRARY_MISPRIMING",
"PRIMER_INTERNAL_WT_LIBRARY_MISHYB",
"PRIMER_PAIR_WT_LIBRARY_MISPRIMING",
"PRIMER_MIN_QUALITY",
"PRIMER_INTERNAL_MIN_QUALITY",
"PRIMER_MIN_END_QUALITY",
"PRIMER_QUALITY_RANGE_MIN",
"PRIMER_QUALITY_RANGE_MAX",
"PRIMER_WT_SEQ_QUAL",
"PRIMER_INTERNAL_WT_SEQ_QUAL",
"PRIMER_PAIR_WT_PR_PENALTY",
"PRIMER_PAIR_WT_IO_PENALTY",
"PRIMER_INSIDE_PENALTY",
"PRIMER_OUTSIDE_PENALTY",
"PRIMER_WT_POS_PENALTY",
"PRIMER_SEQUENCING_LEAD",
"PRIMER_SEQUENCING_SPACING",
"PRIMER_SEQUENCING_INTERVAL",
"PRIMER_SEQUENCING_ACCURACY",
"PRIMER_WT_END_QUAL",
"PRIMER_INTERNAL_WT_END_QUAL",
"P3_FILE_ID",
"P3_FILE_FLAG",
"P3_COMMENT",
);


my %c_tags;
my %h_doc_tags;
my %all_tags;

foreach my $tag_holder (@oldDocTags) {
	$c_tags{$tag_holder} = "";
	$all_tags{$tag_holder} = "";
	#print $tag_holder."\n";
}

foreach my $tag_holder (@docTags) {
	$h_doc_tags{$tag_holder} = "";
	$all_tags{$tag_holder} = "";
	#print $tag_holder."\n";
}

my $tag_count = 0;
my $seperate_count = 0;
my $any_diff = 0;

print "\nTags only in Old Docs:\n\n";
foreach my $tag_holder (%all_tags) {
	if (($tag_holder=~ /^SEQUENCE_/) or ($tag_holder=~ /^P3_/) 
				or ($tag_holder=~ /^PRIMER_/)){
		$tag_count++;
		#print $tag_holder."\n";
		if (!defined $h_doc_tags{$tag_holder}) {
			$seperate_count++;
			$any_diff = 1;
			print "Tag: ".$tag_holder."\n";
		}
		
	}
}
print "\nTags only in the new Manual:\n\n";
foreach my $tag_holder (%all_tags) {
	if (($tag_holder=~ /^SEQUENCE_/) or ($tag_holder=~ /^P3_/) 
				or ($tag_holder=~ /^PRIMER_/)){
		#print $tag_holder."\n";
		if (!defined $c_tags{$tag_holder}) {
			$seperate_count++;
			$any_diff = 1;
			print "Tag: ".$tag_holder."\n";
		}
		
	}
}

#print "\nTags in Both:\n\n";
foreach my $tag_holder (%all_tags) {
	if (($tag_holder=~ /^SEQUENCE_/) or ($tag_holder=~ /^P3_/) 
				or ($tag_holder=~ /^PRIMER_/)){
		#print $tag_holder."\n";
		if ((defined $c_tags{$tag_holder}) and (defined $h_doc_tags{$tag_holder})) {
			#print $tag_holder."\n";
		}
		
	}
}

print"\nEvaluated $tag_count Tags\n";
if ($any_diff == 0) {
    print"No differences found!\n\n";
} else {
	print"Found $seperate_count different Tags\n\n";
}

print"end processing\n";

